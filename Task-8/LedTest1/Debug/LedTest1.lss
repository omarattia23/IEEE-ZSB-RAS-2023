
LedTest1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009ca  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000b34  00000000  00000000  00000a20  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000005f1  00000000  00000000  00001554  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 ce 04 	call	0x99c	; 0x99c <main>
  64:	0c 94 e3 04 	jmp	0x9c6	; 0x9c6 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_voidInit>:
#include "DIO_config.h"
#include "DIO_private.h"
#include "DIO_interface.h"

void DIO_voidInit(void)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
    DIO_u8_DDRA_REG = Conc(DIO_u8_PA7_INTIAL_DIRECTION,DIO_u8_PA6_INTIAL_DIRECTION,
  74:	ea e3       	ldi	r30, 0x3A	; 58
  76:	f0 e0       	ldi	r31, 0x00	; 0
  78:	87 e0       	ldi	r24, 0x07	; 7
  7a:	80 83       	st	Z, r24
                            DIO_u8_PA5_INTIAL_DIRECTION,DIO_u8_PA4_INTIAL_DIRECTION,
                            DIO_u8_PA3_INTIAL_DIRECTION,DIO_u8_PA2_INTIAL_DIRECTION,
                            DIO_u8_PA1_INTIAL_DIRECTION,DIO_u8_PA0_INTIAL_DIRECTION);

    DIO_u8_DDRB_REG = Conc(DIO_u8_PB7_INTIAL_DIRECTION,DIO_u8_PB6_INTIAL_DIRECTION,
  7c:	e7 e3       	ldi	r30, 0x37	; 55
  7e:	f0 e0       	ldi	r31, 0x00	; 0
  80:	10 82       	st	Z, r1
                            DIO_u8_PB5_INTIAL_DIRECTION,DIO_u8_PB4_INTIAL_DIRECTION,
                            DIO_u8_PB3_INTIAL_DIRECTION,DIO_u8_PB2_INTIAL_DIRECTION,
                            DIO_u8_PB1_INTIAL_DIRECTION,DIO_u8_PB0_INTIAL_DIRECTION);

      DIO_u8_DDRC_REG = Conc(DIO_u8_PC7_INTIAL_DIRECTION,DIO_u8_PC6_INTIAL_DIRECTION,
  82:	e4 e3       	ldi	r30, 0x34	; 52
  84:	f0 e0       	ldi	r31, 0x00	; 0
  86:	10 82       	st	Z, r1
                            DIO_u8_PC5_INTIAL_DIRECTION,DIO_u8_PC4_INTIAL_DIRECTION,
                            DIO_u8_PC3_INTIAL_DIRECTION,DIO_u8_PC2_INTIAL_DIRECTION,
                            DIO_u8_PC1_INTIAL_DIRECTION,DIO_u8_PC0_INTIAL_DIRECTION );

      DIO_u8_DDRD_REG = Conc(DIO_u8_PD7_INTIAL_DIRECTION,DIO_u8_PD6_INTIAL_DIRECTION,
  88:	e1 e3       	ldi	r30, 0x31	; 49
  8a:	f0 e0       	ldi	r31, 0x00	; 0
  8c:	8f ef       	ldi	r24, 0xFF	; 255
  8e:	80 83       	st	Z, r24
    DIO_u8_PD5_INTIAL_DIRECTION,DIO_u8_PD4_INTIAL_DIRECTION,DIO_u8_PD3_INTIAL_DIRECTION,DIO_u8_PD2_INTIAL_DIRECTION
     ,DIO_u8_PD1_INTIAL_DIRECTION,DIO_u8_PD0_INTIAL_DIRECTION );

     DIO_u8_PORTA_REG = Conc(DIO_u8_PA7_INTIAL_VALUE,DIO_u8_PA6_INTIAL_VALUE,
  90:	eb e3       	ldi	r30, 0x3B	; 59
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	10 82       	st	Z, r1
    DIO_u8_PA5_INTIAL_VALUE,DIO_u8_PA4_INTIAL_VALUE,DIO_u8_PA3_INTIAL_VALUE,DIO_u8_PA2_INTIAL_VALUE
     ,DIO_u8_PA1_INTIAL_VALUE,DIO_u8_PA0_INTIAL_VALUE );

      DIO_u8_PORTB_REG = Conc(DIO_u8_PB7_INTIAL_VALUE,DIO_u8_PB6_INTIAL_VALUE,
  96:	e8 e3       	ldi	r30, 0x38	; 56
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	10 82       	st	Z, r1
    DIO_u8_PB5_INTIAL_VALUE,DIO_u8_PB4_INTIAL_VALUE,DIO_u8_PB3_INTIAL_VALUE,DIO_u8_PB2_INTIAL_VALUE
     ,DIO_u8_PB1_INTIAL_VALUE,DIO_u8_PB0_INTIAL_VALUE );

      DIO_u8_PORTC_REG = Conc(DIO_u8_PC7_INTIAL_VALUE,DIO_u8_PC6_INTIAL_VALUE,
  9c:	e5 e3       	ldi	r30, 0x35	; 53
  9e:	f0 e0       	ldi	r31, 0x00	; 0
  a0:	10 82       	st	Z, r1
    DIO_u8_PC5_INTIAL_VALUE,DIO_u8_PC4_INTIAL_VALUE,DIO_u8_PC3_INTIAL_VALUE,DIO_u8_PC2_INTIAL_VALUE
     ,DIO_u8_PC1_INTIAL_VALUE,DIO_u8_PC0_INTIAL_VALUE );

      DIO_u8_PORTD_REG = Conc(DIO_u8_PD7_INTIAL_VALUE,DIO_u8_PD6_INTIAL_VALUE,
  a2:	e2 e3       	ldi	r30, 0x32	; 50
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	10 82       	st	Z, r1
    DIO_u8_PD5_INTIAL_VALUE,DIO_u8_PD4_INTIAL_VALUE,DIO_u8_PD3_INTIAL_VALUE,DIO_u8_PD2_INTIAL_VALUE
     ,DIO_u8_PD1_INTIAL_VALUE,DIO_u8_PD0_INTIAL_VALUE );


   
}
  a8:	cf 91       	pop	r28
  aa:	df 91       	pop	r29
  ac:	08 95       	ret

000000ae <DIO_voidSetPinDirection>:
u8 DIO_voidSetPinDirection (u8 Copy_u8PortId, u8 Copy_u8PinID, u8 Copy_u8PinDirection )
{
  ae:	df 93       	push	r29
  b0:	cf 93       	push	r28
  b2:	cd b7       	in	r28, 0x3d	; 61
  b4:	de b7       	in	r29, 0x3e	; 62
  b6:	2e 97       	sbiw	r28, 0x0e	; 14
  b8:	0f b6       	in	r0, 0x3f	; 63
  ba:	f8 94       	cli
  bc:	de bf       	out	0x3e, r29	; 62
  be:	0f be       	out	0x3f, r0	; 63
  c0:	cd bf       	out	0x3d, r28	; 61
  c2:	8a 83       	std	Y+2, r24	; 0x02
  c4:	6b 83       	std	Y+3, r22	; 0x03
  c6:	4c 83       	std	Y+4, r20	; 0x04

u8 Local_u8ErrorState = STD_TYPES_OK;
  c8:	81 e0       	ldi	r24, 0x01	; 1
  ca:	89 83       	std	Y+1, r24	; 0x01
if((Copy_u8PortId <= DIO_u8_PORTD ) &&  (Copy_u8PortId <= DIO_u8_PIN7) && ((Copy_u8PinDirection == DIO_u8_OUTPUT) || (Copy_u8PinDirection == DIO_u8_INPUT)))
  cc:	8a 81       	ldd	r24, Y+2	; 0x02
  ce:	84 30       	cpi	r24, 0x04	; 4
  d0:	08 f0       	brcs	.+2      	; 0xd4 <DIO_voidSetPinDirection+0x26>
  d2:	0c c1       	rjmp	.+536    	; 0x2ec <DIO_voidSetPinDirection+0x23e>
  d4:	8a 81       	ldd	r24, Y+2	; 0x02
  d6:	88 30       	cpi	r24, 0x08	; 8
  d8:	08 f0       	brcs	.+2      	; 0xdc <DIO_voidSetPinDirection+0x2e>
  da:	08 c1       	rjmp	.+528    	; 0x2ec <DIO_voidSetPinDirection+0x23e>
  dc:	8c 81       	ldd	r24, Y+4	; 0x04
  de:	81 30       	cpi	r24, 0x01	; 1
  e0:	21 f0       	breq	.+8      	; 0xea <DIO_voidSetPinDirection+0x3c>
  e2:	8c 81       	ldd	r24, Y+4	; 0x04
  e4:	88 23       	and	r24, r24
  e6:	09 f0       	breq	.+2      	; 0xea <DIO_voidSetPinDirection+0x3c>
  e8:	01 c1       	rjmp	.+514    	; 0x2ec <DIO_voidSetPinDirection+0x23e>
{
   switch (Copy_u8PortId)
  ea:	8a 81       	ldd	r24, Y+2	; 0x02
  ec:	28 2f       	mov	r18, r24
  ee:	30 e0       	ldi	r19, 0x00	; 0
  f0:	3e 87       	std	Y+14, r19	; 0x0e
  f2:	2d 87       	std	Y+13, r18	; 0x0d
  f4:	8d 85       	ldd	r24, Y+13	; 0x0d
  f6:	9e 85       	ldd	r25, Y+14	; 0x0e
  f8:	81 30       	cpi	r24, 0x01	; 1
  fa:	91 05       	cpc	r25, r1
  fc:	09 f4       	brne	.+2      	; 0x100 <DIO_voidSetPinDirection+0x52>
  fe:	4f c0       	rjmp	.+158    	; 0x19e <DIO_voidSetPinDirection+0xf0>
 100:	2d 85       	ldd	r18, Y+13	; 0x0d
 102:	3e 85       	ldd	r19, Y+14	; 0x0e
 104:	22 30       	cpi	r18, 0x02	; 2
 106:	31 05       	cpc	r19, r1
 108:	2c f4       	brge	.+10     	; 0x114 <DIO_voidSetPinDirection+0x66>
 10a:	8d 85       	ldd	r24, Y+13	; 0x0d
 10c:	9e 85       	ldd	r25, Y+14	; 0x0e
 10e:	00 97       	sbiw	r24, 0x00	; 0
 110:	71 f0       	breq	.+28     	; 0x12e <DIO_voidSetPinDirection+0x80>
 112:	ed c0       	rjmp	.+474    	; 0x2ee <DIO_voidSetPinDirection+0x240>
 114:	2d 85       	ldd	r18, Y+13	; 0x0d
 116:	3e 85       	ldd	r19, Y+14	; 0x0e
 118:	22 30       	cpi	r18, 0x02	; 2
 11a:	31 05       	cpc	r19, r1
 11c:	09 f4       	brne	.+2      	; 0x120 <DIO_voidSetPinDirection+0x72>
 11e:	77 c0       	rjmp	.+238    	; 0x20e <DIO_voidSetPinDirection+0x160>
 120:	8d 85       	ldd	r24, Y+13	; 0x0d
 122:	9e 85       	ldd	r25, Y+14	; 0x0e
 124:	83 30       	cpi	r24, 0x03	; 3
 126:	91 05       	cpc	r25, r1
 128:	09 f4       	brne	.+2      	; 0x12c <DIO_voidSetPinDirection+0x7e>
 12a:	a9 c0       	rjmp	.+338    	; 0x27e <DIO_voidSetPinDirection+0x1d0>
 12c:	e0 c0       	rjmp	.+448    	; 0x2ee <DIO_voidSetPinDirection+0x240>
   {
     case DIO_u8_PORTA:
        switch (Copy_u8PinDirection)
 12e:	8c 81       	ldd	r24, Y+4	; 0x04
 130:	28 2f       	mov	r18, r24
 132:	30 e0       	ldi	r19, 0x00	; 0
 134:	3c 87       	std	Y+12, r19	; 0x0c
 136:	2b 87       	std	Y+11, r18	; 0x0b
 138:	8b 85       	ldd	r24, Y+11	; 0x0b
 13a:	9c 85       	ldd	r25, Y+12	; 0x0c
 13c:	00 97       	sbiw	r24, 0x00	; 0
 13e:	d1 f0       	breq	.+52     	; 0x174 <DIO_voidSetPinDirection+0xc6>
 140:	2b 85       	ldd	r18, Y+11	; 0x0b
 142:	3c 85       	ldd	r19, Y+12	; 0x0c
 144:	21 30       	cpi	r18, 0x01	; 1
 146:	31 05       	cpc	r19, r1
 148:	09 f0       	breq	.+2      	; 0x14c <DIO_voidSetPinDirection+0x9e>
 14a:	d1 c0       	rjmp	.+418    	; 0x2ee <DIO_voidSetPinDirection+0x240>
        {
        case DIO_u8_OUTPUT : SET_BIT(DIO_u8_DDRA_REG,Copy_u8PinID );break;
 14c:	aa e3       	ldi	r26, 0x3A	; 58
 14e:	b0 e0       	ldi	r27, 0x00	; 0
 150:	ea e3       	ldi	r30, 0x3A	; 58
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	80 81       	ld	r24, Z
 156:	48 2f       	mov	r20, r24
 158:	8b 81       	ldd	r24, Y+3	; 0x03
 15a:	28 2f       	mov	r18, r24
 15c:	30 e0       	ldi	r19, 0x00	; 0
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	02 2e       	mov	r0, r18
 164:	02 c0       	rjmp	.+4      	; 0x16a <DIO_voidSetPinDirection+0xbc>
 166:	88 0f       	add	r24, r24
 168:	99 1f       	adc	r25, r25
 16a:	0a 94       	dec	r0
 16c:	e2 f7       	brpl	.-8      	; 0x166 <DIO_voidSetPinDirection+0xb8>
 16e:	84 2b       	or	r24, r20
 170:	8c 93       	st	X, r24
 172:	bd c0       	rjmp	.+378    	; 0x2ee <DIO_voidSetPinDirection+0x240>
         case DIO_u8_INPUT : CLR_BIT(DIO_u8_DDRA_REG,Copy_u8PinID );break;
 174:	aa e3       	ldi	r26, 0x3A	; 58
 176:	b0 e0       	ldi	r27, 0x00	; 0
 178:	ea e3       	ldi	r30, 0x3A	; 58
 17a:	f0 e0       	ldi	r31, 0x00	; 0
 17c:	80 81       	ld	r24, Z
 17e:	48 2f       	mov	r20, r24
 180:	8b 81       	ldd	r24, Y+3	; 0x03
 182:	28 2f       	mov	r18, r24
 184:	30 e0       	ldi	r19, 0x00	; 0
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	02 2e       	mov	r0, r18
 18c:	02 c0       	rjmp	.+4      	; 0x192 <DIO_voidSetPinDirection+0xe4>
 18e:	88 0f       	add	r24, r24
 190:	99 1f       	adc	r25, r25
 192:	0a 94       	dec	r0
 194:	e2 f7       	brpl	.-8      	; 0x18e <DIO_voidSetPinDirection+0xe0>
 196:	80 95       	com	r24
 198:	84 23       	and	r24, r20
 19a:	8c 93       	st	X, r24
 19c:	a8 c0       	rjmp	.+336    	; 0x2ee <DIO_voidSetPinDirection+0x240>

        }

    break;
    case DIO_u8_PORTB:
        switch (Copy_u8PinDirection)
 19e:	8c 81       	ldd	r24, Y+4	; 0x04
 1a0:	28 2f       	mov	r18, r24
 1a2:	30 e0       	ldi	r19, 0x00	; 0
 1a4:	3a 87       	std	Y+10, r19	; 0x0a
 1a6:	29 87       	std	Y+9, r18	; 0x09
 1a8:	89 85       	ldd	r24, Y+9	; 0x09
 1aa:	9a 85       	ldd	r25, Y+10	; 0x0a
 1ac:	00 97       	sbiw	r24, 0x00	; 0
 1ae:	d1 f0       	breq	.+52     	; 0x1e4 <DIO_voidSetPinDirection+0x136>
 1b0:	29 85       	ldd	r18, Y+9	; 0x09
 1b2:	3a 85       	ldd	r19, Y+10	; 0x0a
 1b4:	21 30       	cpi	r18, 0x01	; 1
 1b6:	31 05       	cpc	r19, r1
 1b8:	09 f0       	breq	.+2      	; 0x1bc <DIO_voidSetPinDirection+0x10e>
 1ba:	99 c0       	rjmp	.+306    	; 0x2ee <DIO_voidSetPinDirection+0x240>
        {
        case DIO_u8_OUTPUT : SET_BIT(DIO_u8_DDRB_REG,Copy_u8PinID );break;
 1bc:	a7 e3       	ldi	r26, 0x37	; 55
 1be:	b0 e0       	ldi	r27, 0x00	; 0
 1c0:	e7 e3       	ldi	r30, 0x37	; 55
 1c2:	f0 e0       	ldi	r31, 0x00	; 0
 1c4:	80 81       	ld	r24, Z
 1c6:	48 2f       	mov	r20, r24
 1c8:	8b 81       	ldd	r24, Y+3	; 0x03
 1ca:	28 2f       	mov	r18, r24
 1cc:	30 e0       	ldi	r19, 0x00	; 0
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	02 2e       	mov	r0, r18
 1d4:	02 c0       	rjmp	.+4      	; 0x1da <DIO_voidSetPinDirection+0x12c>
 1d6:	88 0f       	add	r24, r24
 1d8:	99 1f       	adc	r25, r25
 1da:	0a 94       	dec	r0
 1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <DIO_voidSetPinDirection+0x128>
 1de:	84 2b       	or	r24, r20
 1e0:	8c 93       	st	X, r24
 1e2:	85 c0       	rjmp	.+266    	; 0x2ee <DIO_voidSetPinDirection+0x240>
         case DIO_u8_INPUT : CLR_BIT(DIO_u8_DDRB_REG,Copy_u8PinID );break;
 1e4:	a7 e3       	ldi	r26, 0x37	; 55
 1e6:	b0 e0       	ldi	r27, 0x00	; 0
 1e8:	e7 e3       	ldi	r30, 0x37	; 55
 1ea:	f0 e0       	ldi	r31, 0x00	; 0
 1ec:	80 81       	ld	r24, Z
 1ee:	48 2f       	mov	r20, r24
 1f0:	8b 81       	ldd	r24, Y+3	; 0x03
 1f2:	28 2f       	mov	r18, r24
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	02 2e       	mov	r0, r18
 1fc:	02 c0       	rjmp	.+4      	; 0x202 <DIO_voidSetPinDirection+0x154>
 1fe:	88 0f       	add	r24, r24
 200:	99 1f       	adc	r25, r25
 202:	0a 94       	dec	r0
 204:	e2 f7       	brpl	.-8      	; 0x1fe <DIO_voidSetPinDirection+0x150>
 206:	80 95       	com	r24
 208:	84 23       	and	r24, r20
 20a:	8c 93       	st	X, r24
 20c:	70 c0       	rjmp	.+224    	; 0x2ee <DIO_voidSetPinDirection+0x240>

        }

    break;
    case DIO_u8_PORTC:
        switch (Copy_u8PinDirection)
 20e:	8c 81       	ldd	r24, Y+4	; 0x04
 210:	28 2f       	mov	r18, r24
 212:	30 e0       	ldi	r19, 0x00	; 0
 214:	38 87       	std	Y+8, r19	; 0x08
 216:	2f 83       	std	Y+7, r18	; 0x07
 218:	8f 81       	ldd	r24, Y+7	; 0x07
 21a:	98 85       	ldd	r25, Y+8	; 0x08
 21c:	00 97       	sbiw	r24, 0x00	; 0
 21e:	d1 f0       	breq	.+52     	; 0x254 <DIO_voidSetPinDirection+0x1a6>
 220:	2f 81       	ldd	r18, Y+7	; 0x07
 222:	38 85       	ldd	r19, Y+8	; 0x08
 224:	21 30       	cpi	r18, 0x01	; 1
 226:	31 05       	cpc	r19, r1
 228:	09 f0       	breq	.+2      	; 0x22c <DIO_voidSetPinDirection+0x17e>
 22a:	61 c0       	rjmp	.+194    	; 0x2ee <DIO_voidSetPinDirection+0x240>
        {
        case DIO_u8_OUTPUT : SET_BIT(DIO_u8_DDRC_REG,Copy_u8PinID );break;
 22c:	a4 e3       	ldi	r26, 0x34	; 52
 22e:	b0 e0       	ldi	r27, 0x00	; 0
 230:	e4 e3       	ldi	r30, 0x34	; 52
 232:	f0 e0       	ldi	r31, 0x00	; 0
 234:	80 81       	ld	r24, Z
 236:	48 2f       	mov	r20, r24
 238:	8b 81       	ldd	r24, Y+3	; 0x03
 23a:	28 2f       	mov	r18, r24
 23c:	30 e0       	ldi	r19, 0x00	; 0
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	02 2e       	mov	r0, r18
 244:	02 c0       	rjmp	.+4      	; 0x24a <DIO_voidSetPinDirection+0x19c>
 246:	88 0f       	add	r24, r24
 248:	99 1f       	adc	r25, r25
 24a:	0a 94       	dec	r0
 24c:	e2 f7       	brpl	.-8      	; 0x246 <DIO_voidSetPinDirection+0x198>
 24e:	84 2b       	or	r24, r20
 250:	8c 93       	st	X, r24
 252:	4d c0       	rjmp	.+154    	; 0x2ee <DIO_voidSetPinDirection+0x240>
         case DIO_u8_INPUT : CLR_BIT(DIO_u8_DDRC_REG,Copy_u8PinID );break;
 254:	a4 e3       	ldi	r26, 0x34	; 52
 256:	b0 e0       	ldi	r27, 0x00	; 0
 258:	e4 e3       	ldi	r30, 0x34	; 52
 25a:	f0 e0       	ldi	r31, 0x00	; 0
 25c:	80 81       	ld	r24, Z
 25e:	48 2f       	mov	r20, r24
 260:	8b 81       	ldd	r24, Y+3	; 0x03
 262:	28 2f       	mov	r18, r24
 264:	30 e0       	ldi	r19, 0x00	; 0
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	02 2e       	mov	r0, r18
 26c:	02 c0       	rjmp	.+4      	; 0x272 <DIO_voidSetPinDirection+0x1c4>
 26e:	88 0f       	add	r24, r24
 270:	99 1f       	adc	r25, r25
 272:	0a 94       	dec	r0
 274:	e2 f7       	brpl	.-8      	; 0x26e <DIO_voidSetPinDirection+0x1c0>
 276:	80 95       	com	r24
 278:	84 23       	and	r24, r20
 27a:	8c 93       	st	X, r24
 27c:	38 c0       	rjmp	.+112    	; 0x2ee <DIO_voidSetPinDirection+0x240>

        }

    break;
    case DIO_u8_PORTD:
        switch (Copy_u8PinDirection)
 27e:	8c 81       	ldd	r24, Y+4	; 0x04
 280:	28 2f       	mov	r18, r24
 282:	30 e0       	ldi	r19, 0x00	; 0
 284:	3e 83       	std	Y+6, r19	; 0x06
 286:	2d 83       	std	Y+5, r18	; 0x05
 288:	8d 81       	ldd	r24, Y+5	; 0x05
 28a:	9e 81       	ldd	r25, Y+6	; 0x06
 28c:	00 97       	sbiw	r24, 0x00	; 0
 28e:	c9 f0       	breq	.+50     	; 0x2c2 <DIO_voidSetPinDirection+0x214>
 290:	2d 81       	ldd	r18, Y+5	; 0x05
 292:	3e 81       	ldd	r19, Y+6	; 0x06
 294:	21 30       	cpi	r18, 0x01	; 1
 296:	31 05       	cpc	r19, r1
 298:	51 f5       	brne	.+84     	; 0x2ee <DIO_voidSetPinDirection+0x240>
        {
        case DIO_u8_OUTPUT : SET_BIT(DIO_u8_DDRD_REG,Copy_u8PinID );break;
 29a:	a1 e3       	ldi	r26, 0x31	; 49
 29c:	b0 e0       	ldi	r27, 0x00	; 0
 29e:	e1 e3       	ldi	r30, 0x31	; 49
 2a0:	f0 e0       	ldi	r31, 0x00	; 0
 2a2:	80 81       	ld	r24, Z
 2a4:	48 2f       	mov	r20, r24
 2a6:	8b 81       	ldd	r24, Y+3	; 0x03
 2a8:	28 2f       	mov	r18, r24
 2aa:	30 e0       	ldi	r19, 0x00	; 0
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	02 2e       	mov	r0, r18
 2b2:	02 c0       	rjmp	.+4      	; 0x2b8 <DIO_voidSetPinDirection+0x20a>
 2b4:	88 0f       	add	r24, r24
 2b6:	99 1f       	adc	r25, r25
 2b8:	0a 94       	dec	r0
 2ba:	e2 f7       	brpl	.-8      	; 0x2b4 <DIO_voidSetPinDirection+0x206>
 2bc:	84 2b       	or	r24, r20
 2be:	8c 93       	st	X, r24
 2c0:	16 c0       	rjmp	.+44     	; 0x2ee <DIO_voidSetPinDirection+0x240>
         case DIO_u8_INPUT : CLR_BIT(DIO_u8_DDRD_REG,Copy_u8PinID );break;
 2c2:	a1 e3       	ldi	r26, 0x31	; 49
 2c4:	b0 e0       	ldi	r27, 0x00	; 0
 2c6:	e1 e3       	ldi	r30, 0x31	; 49
 2c8:	f0 e0       	ldi	r31, 0x00	; 0
 2ca:	80 81       	ld	r24, Z
 2cc:	48 2f       	mov	r20, r24
 2ce:	8b 81       	ldd	r24, Y+3	; 0x03
 2d0:	28 2f       	mov	r18, r24
 2d2:	30 e0       	ldi	r19, 0x00	; 0
 2d4:	81 e0       	ldi	r24, 0x01	; 1
 2d6:	90 e0       	ldi	r25, 0x00	; 0
 2d8:	02 2e       	mov	r0, r18
 2da:	02 c0       	rjmp	.+4      	; 0x2e0 <DIO_voidSetPinDirection+0x232>
 2dc:	88 0f       	add	r24, r24
 2de:	99 1f       	adc	r25, r25
 2e0:	0a 94       	dec	r0
 2e2:	e2 f7       	brpl	.-8      	; 0x2dc <DIO_voidSetPinDirection+0x22e>
 2e4:	80 95       	com	r24
 2e6:	84 23       	and	r24, r20
 2e8:	8c 93       	st	X, r24
 2ea:	01 c0       	rjmp	.+2      	; 0x2ee <DIO_voidSetPinDirection+0x240>

   }
}
else
{
    Local_u8ErrorState = STD_TYPES_NOK;
 2ec:	19 82       	std	Y+1, r1	; 0x01
}
return Local_u8ErrorState;
 2ee:	89 81       	ldd	r24, Y+1	; 0x01

}
 2f0:	2e 96       	adiw	r28, 0x0e	; 14
 2f2:	0f b6       	in	r0, 0x3f	; 63
 2f4:	f8 94       	cli
 2f6:	de bf       	out	0x3e, r29	; 62
 2f8:	0f be       	out	0x3f, r0	; 63
 2fa:	cd bf       	out	0x3d, r28	; 61
 2fc:	cf 91       	pop	r28
 2fe:	df 91       	pop	r29
 300:	08 95       	ret

00000302 <DIO_voidSetPinValue>:
u8 DIO_voidSetPinValue     (u8 Copy_u8PortId, u8 Copy_PinID, u8 Copy_u8PinValue)
{
 302:	df 93       	push	r29
 304:	cf 93       	push	r28
 306:	cd b7       	in	r28, 0x3d	; 61
 308:	de b7       	in	r29, 0x3e	; 62
 30a:	2e 97       	sbiw	r28, 0x0e	; 14
 30c:	0f b6       	in	r0, 0x3f	; 63
 30e:	f8 94       	cli
 310:	de bf       	out	0x3e, r29	; 62
 312:	0f be       	out	0x3f, r0	; 63
 314:	cd bf       	out	0x3d, r28	; 61
 316:	8a 83       	std	Y+2, r24	; 0x02
 318:	6b 83       	std	Y+3, r22	; 0x03
 31a:	4c 83       	std	Y+4, r20	; 0x04
    u8 local_u8ErrorState = STD_TYPES_OK;
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	89 83       	std	Y+1, r24	; 0x01
    if (Copy_PinID <= DIO_u8_PIN7)
 320:	8b 81       	ldd	r24, Y+3	; 0x03
 322:	88 30       	cpi	r24, 0x08	; 8
 324:	08 f0       	brcs	.+2      	; 0x328 <DIO_voidSetPinValue+0x26>
 326:	08 c1       	rjmp	.+528    	; 0x538 <DIO_voidSetPinValue+0x236>
    {
        
    switch (Copy_u8PortId)
 328:	8a 81       	ldd	r24, Y+2	; 0x02
 32a:	28 2f       	mov	r18, r24
 32c:	30 e0       	ldi	r19, 0x00	; 0
 32e:	3e 87       	std	Y+14, r19	; 0x0e
 330:	2d 87       	std	Y+13, r18	; 0x0d
 332:	8d 85       	ldd	r24, Y+13	; 0x0d
 334:	9e 85       	ldd	r25, Y+14	; 0x0e
 336:	81 30       	cpi	r24, 0x01	; 1
 338:	91 05       	cpc	r25, r1
 33a:	09 f4       	brne	.+2      	; 0x33e <DIO_voidSetPinValue+0x3c>
 33c:	50 c0       	rjmp	.+160    	; 0x3de <DIO_voidSetPinValue+0xdc>
 33e:	2d 85       	ldd	r18, Y+13	; 0x0d
 340:	3e 85       	ldd	r19, Y+14	; 0x0e
 342:	22 30       	cpi	r18, 0x02	; 2
 344:	31 05       	cpc	r19, r1
 346:	2c f4       	brge	.+10     	; 0x352 <DIO_voidSetPinValue+0x50>
 348:	8d 85       	ldd	r24, Y+13	; 0x0d
 34a:	9e 85       	ldd	r25, Y+14	; 0x0e
 34c:	00 97       	sbiw	r24, 0x00	; 0
 34e:	71 f0       	breq	.+28     	; 0x36c <DIO_voidSetPinValue+0x6a>
 350:	f1 c0       	rjmp	.+482    	; 0x534 <DIO_voidSetPinValue+0x232>
 352:	2d 85       	ldd	r18, Y+13	; 0x0d
 354:	3e 85       	ldd	r19, Y+14	; 0x0e
 356:	22 30       	cpi	r18, 0x02	; 2
 358:	31 05       	cpc	r19, r1
 35a:	09 f4       	brne	.+2      	; 0x35e <DIO_voidSetPinValue+0x5c>
 35c:	79 c0       	rjmp	.+242    	; 0x450 <DIO_voidSetPinValue+0x14e>
 35e:	8d 85       	ldd	r24, Y+13	; 0x0d
 360:	9e 85       	ldd	r25, Y+14	; 0x0e
 362:	83 30       	cpi	r24, 0x03	; 3
 364:	91 05       	cpc	r25, r1
 366:	09 f4       	brne	.+2      	; 0x36a <DIO_voidSetPinValue+0x68>
 368:	ac c0       	rjmp	.+344    	; 0x4c2 <DIO_voidSetPinValue+0x1c0>
 36a:	e4 c0       	rjmp	.+456    	; 0x534 <DIO_voidSetPinValue+0x232>
    {
    case DIO_u8_PORTA:
        switch (Copy_u8PinValue)
 36c:	8c 81       	ldd	r24, Y+4	; 0x04
 36e:	28 2f       	mov	r18, r24
 370:	30 e0       	ldi	r19, 0x00	; 0
 372:	3c 87       	std	Y+12, r19	; 0x0c
 374:	2b 87       	std	Y+11, r18	; 0x0b
 376:	8b 85       	ldd	r24, Y+11	; 0x0b
 378:	9c 85       	ldd	r25, Y+12	; 0x0c
 37a:	00 97       	sbiw	r24, 0x00	; 0
 37c:	c9 f0       	breq	.+50     	; 0x3b0 <DIO_voidSetPinValue+0xae>
 37e:	2b 85       	ldd	r18, Y+11	; 0x0b
 380:	3c 85       	ldd	r19, Y+12	; 0x0c
 382:	21 30       	cpi	r18, 0x01	; 1
 384:	31 05       	cpc	r19, r1
 386:	49 f5       	brne	.+82     	; 0x3da <DIO_voidSetPinValue+0xd8>
        {
        case DIO_u8_HIGH:
           SET_BIT(DIO_u8_PORTA_REG,Copy_PinID);
 388:	ab e3       	ldi	r26, 0x3B	; 59
 38a:	b0 e0       	ldi	r27, 0x00	; 0
 38c:	eb e3       	ldi	r30, 0x3B	; 59
 38e:	f0 e0       	ldi	r31, 0x00	; 0
 390:	80 81       	ld	r24, Z
 392:	48 2f       	mov	r20, r24
 394:	8b 81       	ldd	r24, Y+3	; 0x03
 396:	28 2f       	mov	r18, r24
 398:	30 e0       	ldi	r19, 0x00	; 0
 39a:	81 e0       	ldi	r24, 0x01	; 1
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	02 2e       	mov	r0, r18
 3a0:	02 c0       	rjmp	.+4      	; 0x3a6 <DIO_voidSetPinValue+0xa4>
 3a2:	88 0f       	add	r24, r24
 3a4:	99 1f       	adc	r25, r25
 3a6:	0a 94       	dec	r0
 3a8:	e2 f7       	brpl	.-8      	; 0x3a2 <DIO_voidSetPinValue+0xa0>
 3aa:	84 2b       	or	r24, r20
 3ac:	8c 93       	st	X, r24
 3ae:	c5 c0       	rjmp	.+394    	; 0x53a <DIO_voidSetPinValue+0x238>
            break;
        case DIO_u8_LOW:
           CLR_BIT(DIO_u8_PORTA_REG,Copy_PinID);
 3b0:	ab e3       	ldi	r26, 0x3B	; 59
 3b2:	b0 e0       	ldi	r27, 0x00	; 0
 3b4:	eb e3       	ldi	r30, 0x3B	; 59
 3b6:	f0 e0       	ldi	r31, 0x00	; 0
 3b8:	80 81       	ld	r24, Z
 3ba:	48 2f       	mov	r20, r24
 3bc:	8b 81       	ldd	r24, Y+3	; 0x03
 3be:	28 2f       	mov	r18, r24
 3c0:	30 e0       	ldi	r19, 0x00	; 0
 3c2:	81 e0       	ldi	r24, 0x01	; 1
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	02 2e       	mov	r0, r18
 3c8:	02 c0       	rjmp	.+4      	; 0x3ce <DIO_voidSetPinValue+0xcc>
 3ca:	88 0f       	add	r24, r24
 3cc:	99 1f       	adc	r25, r25
 3ce:	0a 94       	dec	r0
 3d0:	e2 f7       	brpl	.-8      	; 0x3ca <DIO_voidSetPinValue+0xc8>
 3d2:	80 95       	com	r24
 3d4:	84 23       	and	r24, r20
 3d6:	8c 93       	st	X, r24
 3d8:	b0 c0       	rjmp	.+352    	; 0x53a <DIO_voidSetPinValue+0x238>
            break;
        default: local_u8ErrorState = STD_TYPES_NOK;
 3da:	19 82       	std	Y+1, r1	; 0x01
 3dc:	ae c0       	rjmp	.+348    	; 0x53a <DIO_voidSetPinValue+0x238>
            break;
        }
        break;
    case DIO_u8_PORTB:
        switch (Copy_u8PinValue)
 3de:	8c 81       	ldd	r24, Y+4	; 0x04
 3e0:	28 2f       	mov	r18, r24
 3e2:	30 e0       	ldi	r19, 0x00	; 0
 3e4:	3a 87       	std	Y+10, r19	; 0x0a
 3e6:	29 87       	std	Y+9, r18	; 0x09
 3e8:	89 85       	ldd	r24, Y+9	; 0x09
 3ea:	9a 85       	ldd	r25, Y+10	; 0x0a
 3ec:	00 97       	sbiw	r24, 0x00	; 0
 3ee:	c9 f0       	breq	.+50     	; 0x422 <DIO_voidSetPinValue+0x120>
 3f0:	29 85       	ldd	r18, Y+9	; 0x09
 3f2:	3a 85       	ldd	r19, Y+10	; 0x0a
 3f4:	21 30       	cpi	r18, 0x01	; 1
 3f6:	31 05       	cpc	r19, r1
 3f8:	49 f5       	brne	.+82     	; 0x44c <DIO_voidSetPinValue+0x14a>
        {
        case DIO_u8_HIGH:
           SET_BIT(DIO_u8_PORTB_REG,Copy_PinID);
 3fa:	a8 e3       	ldi	r26, 0x38	; 56
 3fc:	b0 e0       	ldi	r27, 0x00	; 0
 3fe:	e8 e3       	ldi	r30, 0x38	; 56
 400:	f0 e0       	ldi	r31, 0x00	; 0
 402:	80 81       	ld	r24, Z
 404:	48 2f       	mov	r20, r24
 406:	8b 81       	ldd	r24, Y+3	; 0x03
 408:	28 2f       	mov	r18, r24
 40a:	30 e0       	ldi	r19, 0x00	; 0
 40c:	81 e0       	ldi	r24, 0x01	; 1
 40e:	90 e0       	ldi	r25, 0x00	; 0
 410:	02 2e       	mov	r0, r18
 412:	02 c0       	rjmp	.+4      	; 0x418 <DIO_voidSetPinValue+0x116>
 414:	88 0f       	add	r24, r24
 416:	99 1f       	adc	r25, r25
 418:	0a 94       	dec	r0
 41a:	e2 f7       	brpl	.-8      	; 0x414 <DIO_voidSetPinValue+0x112>
 41c:	84 2b       	or	r24, r20
 41e:	8c 93       	st	X, r24
 420:	8c c0       	rjmp	.+280    	; 0x53a <DIO_voidSetPinValue+0x238>
            break;
        case DIO_u8_LOW:
           CLR_BIT(DIO_u8_PORTB_REG,Copy_PinID);
 422:	a8 e3       	ldi	r26, 0x38	; 56
 424:	b0 e0       	ldi	r27, 0x00	; 0
 426:	e8 e3       	ldi	r30, 0x38	; 56
 428:	f0 e0       	ldi	r31, 0x00	; 0
 42a:	80 81       	ld	r24, Z
 42c:	48 2f       	mov	r20, r24
 42e:	8b 81       	ldd	r24, Y+3	; 0x03
 430:	28 2f       	mov	r18, r24
 432:	30 e0       	ldi	r19, 0x00	; 0
 434:	81 e0       	ldi	r24, 0x01	; 1
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	02 2e       	mov	r0, r18
 43a:	02 c0       	rjmp	.+4      	; 0x440 <DIO_voidSetPinValue+0x13e>
 43c:	88 0f       	add	r24, r24
 43e:	99 1f       	adc	r25, r25
 440:	0a 94       	dec	r0
 442:	e2 f7       	brpl	.-8      	; 0x43c <DIO_voidSetPinValue+0x13a>
 444:	80 95       	com	r24
 446:	84 23       	and	r24, r20
 448:	8c 93       	st	X, r24
 44a:	77 c0       	rjmp	.+238    	; 0x53a <DIO_voidSetPinValue+0x238>
            break;
        default: local_u8ErrorState = STD_TYPES_NOK;
 44c:	19 82       	std	Y+1, r1	; 0x01
 44e:	75 c0       	rjmp	.+234    	; 0x53a <DIO_voidSetPinValue+0x238>
            break;
        }
        break;
        
    case DIO_u8_PORTC:
         switch (Copy_u8PinValue)
 450:	8c 81       	ldd	r24, Y+4	; 0x04
 452:	28 2f       	mov	r18, r24
 454:	30 e0       	ldi	r19, 0x00	; 0
 456:	38 87       	std	Y+8, r19	; 0x08
 458:	2f 83       	std	Y+7, r18	; 0x07
 45a:	8f 81       	ldd	r24, Y+7	; 0x07
 45c:	98 85       	ldd	r25, Y+8	; 0x08
 45e:	00 97       	sbiw	r24, 0x00	; 0
 460:	c9 f0       	breq	.+50     	; 0x494 <DIO_voidSetPinValue+0x192>
 462:	2f 81       	ldd	r18, Y+7	; 0x07
 464:	38 85       	ldd	r19, Y+8	; 0x08
 466:	21 30       	cpi	r18, 0x01	; 1
 468:	31 05       	cpc	r19, r1
 46a:	49 f5       	brne	.+82     	; 0x4be <DIO_voidSetPinValue+0x1bc>
        {
        case DIO_u8_HIGH:
           SET_BIT(DIO_u8_PORTC_REG,Copy_PinID);
 46c:	a5 e3       	ldi	r26, 0x35	; 53
 46e:	b0 e0       	ldi	r27, 0x00	; 0
 470:	e5 e3       	ldi	r30, 0x35	; 53
 472:	f0 e0       	ldi	r31, 0x00	; 0
 474:	80 81       	ld	r24, Z
 476:	48 2f       	mov	r20, r24
 478:	8b 81       	ldd	r24, Y+3	; 0x03
 47a:	28 2f       	mov	r18, r24
 47c:	30 e0       	ldi	r19, 0x00	; 0
 47e:	81 e0       	ldi	r24, 0x01	; 1
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	02 2e       	mov	r0, r18
 484:	02 c0       	rjmp	.+4      	; 0x48a <DIO_voidSetPinValue+0x188>
 486:	88 0f       	add	r24, r24
 488:	99 1f       	adc	r25, r25
 48a:	0a 94       	dec	r0
 48c:	e2 f7       	brpl	.-8      	; 0x486 <DIO_voidSetPinValue+0x184>
 48e:	84 2b       	or	r24, r20
 490:	8c 93       	st	X, r24
 492:	53 c0       	rjmp	.+166    	; 0x53a <DIO_voidSetPinValue+0x238>
            break;
        case DIO_u8_LOW:
           CLR_BIT(DIO_u8_PORTC_REG,Copy_PinID);
 494:	a5 e3       	ldi	r26, 0x35	; 53
 496:	b0 e0       	ldi	r27, 0x00	; 0
 498:	e5 e3       	ldi	r30, 0x35	; 53
 49a:	f0 e0       	ldi	r31, 0x00	; 0
 49c:	80 81       	ld	r24, Z
 49e:	48 2f       	mov	r20, r24
 4a0:	8b 81       	ldd	r24, Y+3	; 0x03
 4a2:	28 2f       	mov	r18, r24
 4a4:	30 e0       	ldi	r19, 0x00	; 0
 4a6:	81 e0       	ldi	r24, 0x01	; 1
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	02 2e       	mov	r0, r18
 4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <DIO_voidSetPinValue+0x1b0>
 4ae:	88 0f       	add	r24, r24
 4b0:	99 1f       	adc	r25, r25
 4b2:	0a 94       	dec	r0
 4b4:	e2 f7       	brpl	.-8      	; 0x4ae <DIO_voidSetPinValue+0x1ac>
 4b6:	80 95       	com	r24
 4b8:	84 23       	and	r24, r20
 4ba:	8c 93       	st	X, r24
 4bc:	3e c0       	rjmp	.+124    	; 0x53a <DIO_voidSetPinValue+0x238>
            break;
        default: local_u8ErrorState = STD_TYPES_NOK;
 4be:	19 82       	std	Y+1, r1	; 0x01
 4c0:	3c c0       	rjmp	.+120    	; 0x53a <DIO_voidSetPinValue+0x238>
            break;
        }
        break;
        
    case DIO_u8_PORTD:
         switch (Copy_u8PinValue)
 4c2:	8c 81       	ldd	r24, Y+4	; 0x04
 4c4:	28 2f       	mov	r18, r24
 4c6:	30 e0       	ldi	r19, 0x00	; 0
 4c8:	3e 83       	std	Y+6, r19	; 0x06
 4ca:	2d 83       	std	Y+5, r18	; 0x05
 4cc:	8d 81       	ldd	r24, Y+5	; 0x05
 4ce:	9e 81       	ldd	r25, Y+6	; 0x06
 4d0:	00 97       	sbiw	r24, 0x00	; 0
 4d2:	c9 f0       	breq	.+50     	; 0x506 <DIO_voidSetPinValue+0x204>
 4d4:	2d 81       	ldd	r18, Y+5	; 0x05
 4d6:	3e 81       	ldd	r19, Y+6	; 0x06
 4d8:	21 30       	cpi	r18, 0x01	; 1
 4da:	31 05       	cpc	r19, r1
 4dc:	49 f5       	brne	.+82     	; 0x530 <DIO_voidSetPinValue+0x22e>
        {
        case DIO_u8_HIGH:
           SET_BIT(DIO_u8_PORTD_REG,Copy_PinID);
 4de:	a2 e3       	ldi	r26, 0x32	; 50
 4e0:	b0 e0       	ldi	r27, 0x00	; 0
 4e2:	e2 e3       	ldi	r30, 0x32	; 50
 4e4:	f0 e0       	ldi	r31, 0x00	; 0
 4e6:	80 81       	ld	r24, Z
 4e8:	48 2f       	mov	r20, r24
 4ea:	8b 81       	ldd	r24, Y+3	; 0x03
 4ec:	28 2f       	mov	r18, r24
 4ee:	30 e0       	ldi	r19, 0x00	; 0
 4f0:	81 e0       	ldi	r24, 0x01	; 1
 4f2:	90 e0       	ldi	r25, 0x00	; 0
 4f4:	02 2e       	mov	r0, r18
 4f6:	02 c0       	rjmp	.+4      	; 0x4fc <DIO_voidSetPinValue+0x1fa>
 4f8:	88 0f       	add	r24, r24
 4fa:	99 1f       	adc	r25, r25
 4fc:	0a 94       	dec	r0
 4fe:	e2 f7       	brpl	.-8      	; 0x4f8 <DIO_voidSetPinValue+0x1f6>
 500:	84 2b       	or	r24, r20
 502:	8c 93       	st	X, r24
 504:	1a c0       	rjmp	.+52     	; 0x53a <DIO_voidSetPinValue+0x238>
            break;
        case DIO_u8_LOW:
           CLR_BIT(DIO_u8_PORTD_REG,Copy_PinID);
 506:	a2 e3       	ldi	r26, 0x32	; 50
 508:	b0 e0       	ldi	r27, 0x00	; 0
 50a:	e2 e3       	ldi	r30, 0x32	; 50
 50c:	f0 e0       	ldi	r31, 0x00	; 0
 50e:	80 81       	ld	r24, Z
 510:	48 2f       	mov	r20, r24
 512:	8b 81       	ldd	r24, Y+3	; 0x03
 514:	28 2f       	mov	r18, r24
 516:	30 e0       	ldi	r19, 0x00	; 0
 518:	81 e0       	ldi	r24, 0x01	; 1
 51a:	90 e0       	ldi	r25, 0x00	; 0
 51c:	02 2e       	mov	r0, r18
 51e:	02 c0       	rjmp	.+4      	; 0x524 <DIO_voidSetPinValue+0x222>
 520:	88 0f       	add	r24, r24
 522:	99 1f       	adc	r25, r25
 524:	0a 94       	dec	r0
 526:	e2 f7       	brpl	.-8      	; 0x520 <DIO_voidSetPinValue+0x21e>
 528:	80 95       	com	r24
 52a:	84 23       	and	r24, r20
 52c:	8c 93       	st	X, r24
 52e:	05 c0       	rjmp	.+10     	; 0x53a <DIO_voidSetPinValue+0x238>
            break;
        default: local_u8ErrorState = STD_TYPES_NOK;
 530:	19 82       	std	Y+1, r1	; 0x01
 532:	03 c0       	rjmp	.+6      	; 0x53a <DIO_voidSetPinValue+0x238>
            break;
        }
        break;
        
    default: local_u8ErrorState = STD_TYPES_NOK;
 534:	19 82       	std	Y+1, r1	; 0x01
 536:	01 c0       	rjmp	.+2      	; 0x53a <DIO_voidSetPinValue+0x238>
        
    }
    }
    else{
        local_u8ErrorState = STD_TYPES_NOK;
 538:	19 82       	std	Y+1, r1	; 0x01
    }
    return local_u8ErrorState;
 53a:	89 81       	ldd	r24, Y+1	; 0x01
}
 53c:	2e 96       	adiw	r28, 0x0e	; 14
 53e:	0f b6       	in	r0, 0x3f	; 63
 540:	f8 94       	cli
 542:	de bf       	out	0x3e, r29	; 62
 544:	0f be       	out	0x3f, r0	; 63
 546:	cd bf       	out	0x3d, r28	; 61
 548:	cf 91       	pop	r28
 54a:	df 91       	pop	r29
 54c:	08 95       	ret

0000054e <DIO_u8GetPinValue>:
u8 DIO_u8GetPinValue       (u8 Copy_u8PortId, u8 Copy_PinID, u8  *Copy_pu8PinValue)
{
 54e:	df 93       	push	r29
 550:	cf 93       	push	r28
 552:	cd b7       	in	r28, 0x3d	; 61
 554:	de b7       	in	r29, 0x3e	; 62
 556:	28 97       	sbiw	r28, 0x08	; 8
 558:	0f b6       	in	r0, 0x3f	; 63
 55a:	f8 94       	cli
 55c:	de bf       	out	0x3e, r29	; 62
 55e:	0f be       	out	0x3f, r0	; 63
 560:	cd bf       	out	0x3d, r28	; 61
 562:	8b 83       	std	Y+3, r24	; 0x03
 564:	6c 83       	std	Y+4, r22	; 0x04
 566:	5e 83       	std	Y+6, r21	; 0x06
 568:	4d 83       	std	Y+5, r20	; 0x05
    u8 Local_u8ErrorState = STD_TYPES_OK;
 56a:	81 e0       	ldi	r24, 0x01	; 1
 56c:	8a 83       	std	Y+2, r24	; 0x02
    u8 Local_u8PinValue;
    if((Copy_u8PortId <= DIO_u8_PORTD) && (Copy_PinID <= DIO_u8_PIN7) && (Copy_pu8PinValue != NULL))
 56e:	8b 81       	ldd	r24, Y+3	; 0x03
 570:	84 30       	cpi	r24, 0x04	; 4
 572:	08 f0       	brcs	.+2      	; 0x576 <DIO_u8GetPinValue+0x28>
 574:	9f c0       	rjmp	.+318    	; 0x6b4 <DIO_u8GetPinValue+0x166>
 576:	8c 81       	ldd	r24, Y+4	; 0x04
 578:	88 30       	cpi	r24, 0x08	; 8
 57a:	08 f0       	brcs	.+2      	; 0x57e <DIO_u8GetPinValue+0x30>
 57c:	9b c0       	rjmp	.+310    	; 0x6b4 <DIO_u8GetPinValue+0x166>
 57e:	8d 81       	ldd	r24, Y+5	; 0x05
 580:	9e 81       	ldd	r25, Y+6	; 0x06
 582:	00 97       	sbiw	r24, 0x00	; 0
 584:	09 f4       	brne	.+2      	; 0x588 <DIO_u8GetPinValue+0x3a>
 586:	96 c0       	rjmp	.+300    	; 0x6b4 <DIO_u8GetPinValue+0x166>
    {
       switch (Copy_u8PortId)
 588:	8b 81       	ldd	r24, Y+3	; 0x03
 58a:	28 2f       	mov	r18, r24
 58c:	30 e0       	ldi	r19, 0x00	; 0
 58e:	38 87       	std	Y+8, r19	; 0x08
 590:	2f 83       	std	Y+7, r18	; 0x07
 592:	4f 81       	ldd	r20, Y+7	; 0x07
 594:	58 85       	ldd	r21, Y+8	; 0x08
 596:	41 30       	cpi	r20, 0x01	; 1
 598:	51 05       	cpc	r21, r1
 59a:	a9 f1       	breq	.+106    	; 0x606 <DIO_u8GetPinValue+0xb8>
 59c:	8f 81       	ldd	r24, Y+7	; 0x07
 59e:	98 85       	ldd	r25, Y+8	; 0x08
 5a0:	82 30       	cpi	r24, 0x02	; 2
 5a2:	91 05       	cpc	r25, r1
 5a4:	34 f4       	brge	.+12     	; 0x5b2 <DIO_u8GetPinValue+0x64>
 5a6:	2f 81       	ldd	r18, Y+7	; 0x07
 5a8:	38 85       	ldd	r19, Y+8	; 0x08
 5aa:	21 15       	cp	r18, r1
 5ac:	31 05       	cpc	r19, r1
 5ae:	71 f0       	breq	.+28     	; 0x5cc <DIO_u8GetPinValue+0x7e>
 5b0:	82 c0       	rjmp	.+260    	; 0x6b6 <DIO_u8GetPinValue+0x168>
 5b2:	4f 81       	ldd	r20, Y+7	; 0x07
 5b4:	58 85       	ldd	r21, Y+8	; 0x08
 5b6:	42 30       	cpi	r20, 0x02	; 2
 5b8:	51 05       	cpc	r21, r1
 5ba:	09 f4       	brne	.+2      	; 0x5be <DIO_u8GetPinValue+0x70>
 5bc:	41 c0       	rjmp	.+130    	; 0x640 <DIO_u8GetPinValue+0xf2>
 5be:	8f 81       	ldd	r24, Y+7	; 0x07
 5c0:	98 85       	ldd	r25, Y+8	; 0x08
 5c2:	83 30       	cpi	r24, 0x03	; 3
 5c4:	91 05       	cpc	r25, r1
 5c6:	09 f4       	brne	.+2      	; 0x5ca <DIO_u8GetPinValue+0x7c>
 5c8:	58 c0       	rjmp	.+176    	; 0x67a <DIO_u8GetPinValue+0x12c>
 5ca:	75 c0       	rjmp	.+234    	; 0x6b6 <DIO_u8GetPinValue+0x168>
       {
       case DIO_u8_PORTA:
        Local_u8PinValue = GET_BIT(DIO_u8_PINA_REG,Copy_PinID);
 5cc:	e9 e3       	ldi	r30, 0x39	; 57
 5ce:	f0 e0       	ldi	r31, 0x00	; 0
 5d0:	80 81       	ld	r24, Z
 5d2:	28 2f       	mov	r18, r24
 5d4:	30 e0       	ldi	r19, 0x00	; 0
 5d6:	8c 81       	ldd	r24, Y+4	; 0x04
 5d8:	88 2f       	mov	r24, r24
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	a9 01       	movw	r20, r18
 5de:	02 c0       	rjmp	.+4      	; 0x5e4 <DIO_u8GetPinValue+0x96>
 5e0:	55 95       	asr	r21
 5e2:	47 95       	ror	r20
 5e4:	8a 95       	dec	r24
 5e6:	e2 f7       	brpl	.-8      	; 0x5e0 <DIO_u8GetPinValue+0x92>
 5e8:	ca 01       	movw	r24, r20
 5ea:	81 70       	andi	r24, 0x01	; 1
 5ec:	89 83       	std	Y+1, r24	; 0x01
        if (Local_u8PinValue == 0)
 5ee:	89 81       	ldd	r24, Y+1	; 0x01
 5f0:	88 23       	and	r24, r24
 5f2:	21 f4       	brne	.+8      	; 0x5fc <DIO_u8GetPinValue+0xae>
        {
            *Copy_pu8PinValue = DIO_u8_LOW;
 5f4:	ed 81       	ldd	r30, Y+5	; 0x05
 5f6:	fe 81       	ldd	r31, Y+6	; 0x06
 5f8:	10 82       	st	Z, r1
 5fa:	5d c0       	rjmp	.+186    	; 0x6b6 <DIO_u8GetPinValue+0x168>
        }
        else{
            *Copy_pu8PinValue = DIO_u8_HIGH;
 5fc:	ed 81       	ldd	r30, Y+5	; 0x05
 5fe:	fe 81       	ldd	r31, Y+6	; 0x06
 600:	81 e0       	ldi	r24, 0x01	; 1
 602:	80 83       	st	Z, r24
 604:	58 c0       	rjmp	.+176    	; 0x6b6 <DIO_u8GetPinValue+0x168>
        }
        
        break;
        case DIO_u8_PORTB:
        Local_u8PinValue = GET_BIT(DIO_u8_PINB_REG,Copy_PinID);
 606:	e6 e3       	ldi	r30, 0x36	; 54
 608:	f0 e0       	ldi	r31, 0x00	; 0
 60a:	80 81       	ld	r24, Z
 60c:	28 2f       	mov	r18, r24
 60e:	30 e0       	ldi	r19, 0x00	; 0
 610:	8c 81       	ldd	r24, Y+4	; 0x04
 612:	88 2f       	mov	r24, r24
 614:	90 e0       	ldi	r25, 0x00	; 0
 616:	a9 01       	movw	r20, r18
 618:	02 c0       	rjmp	.+4      	; 0x61e <DIO_u8GetPinValue+0xd0>
 61a:	55 95       	asr	r21
 61c:	47 95       	ror	r20
 61e:	8a 95       	dec	r24
 620:	e2 f7       	brpl	.-8      	; 0x61a <DIO_u8GetPinValue+0xcc>
 622:	ca 01       	movw	r24, r20
 624:	81 70       	andi	r24, 0x01	; 1
 626:	89 83       	std	Y+1, r24	; 0x01
        if (Local_u8PinValue == 0)
 628:	89 81       	ldd	r24, Y+1	; 0x01
 62a:	88 23       	and	r24, r24
 62c:	21 f4       	brne	.+8      	; 0x636 <DIO_u8GetPinValue+0xe8>
        {
            *Copy_pu8PinValue = DIO_u8_LOW;
 62e:	ed 81       	ldd	r30, Y+5	; 0x05
 630:	fe 81       	ldd	r31, Y+6	; 0x06
 632:	10 82       	st	Z, r1
 634:	40 c0       	rjmp	.+128    	; 0x6b6 <DIO_u8GetPinValue+0x168>
        }
        else{
            *Copy_pu8PinValue = DIO_u8_HIGH;
 636:	ed 81       	ldd	r30, Y+5	; 0x05
 638:	fe 81       	ldd	r31, Y+6	; 0x06
 63a:	81 e0       	ldi	r24, 0x01	; 1
 63c:	80 83       	st	Z, r24
 63e:	3b c0       	rjmp	.+118    	; 0x6b6 <DIO_u8GetPinValue+0x168>
        }
        
        break;
        case DIO_u8_PORTC:
        Local_u8PinValue = GET_BIT(DIO_u8_PINC_REG,Copy_PinID);
 640:	e3 e3       	ldi	r30, 0x33	; 51
 642:	f0 e0       	ldi	r31, 0x00	; 0
 644:	80 81       	ld	r24, Z
 646:	28 2f       	mov	r18, r24
 648:	30 e0       	ldi	r19, 0x00	; 0
 64a:	8c 81       	ldd	r24, Y+4	; 0x04
 64c:	88 2f       	mov	r24, r24
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	a9 01       	movw	r20, r18
 652:	02 c0       	rjmp	.+4      	; 0x658 <DIO_u8GetPinValue+0x10a>
 654:	55 95       	asr	r21
 656:	47 95       	ror	r20
 658:	8a 95       	dec	r24
 65a:	e2 f7       	brpl	.-8      	; 0x654 <DIO_u8GetPinValue+0x106>
 65c:	ca 01       	movw	r24, r20
 65e:	81 70       	andi	r24, 0x01	; 1
 660:	89 83       	std	Y+1, r24	; 0x01
        if (Local_u8PinValue == 0)
 662:	89 81       	ldd	r24, Y+1	; 0x01
 664:	88 23       	and	r24, r24
 666:	21 f4       	brne	.+8      	; 0x670 <DIO_u8GetPinValue+0x122>
        {
            *Copy_pu8PinValue = DIO_u8_LOW;
 668:	ed 81       	ldd	r30, Y+5	; 0x05
 66a:	fe 81       	ldd	r31, Y+6	; 0x06
 66c:	10 82       	st	Z, r1
 66e:	23 c0       	rjmp	.+70     	; 0x6b6 <DIO_u8GetPinValue+0x168>
        }
        else{
            *Copy_pu8PinValue = DIO_u8_HIGH;
 670:	ed 81       	ldd	r30, Y+5	; 0x05
 672:	fe 81       	ldd	r31, Y+6	; 0x06
 674:	81 e0       	ldi	r24, 0x01	; 1
 676:	80 83       	st	Z, r24
 678:	1e c0       	rjmp	.+60     	; 0x6b6 <DIO_u8GetPinValue+0x168>
        }
        
        break;
        case DIO_u8_PORTD:
        Local_u8PinValue = GET_BIT(DIO_u8_PIND_REG,Copy_PinID);
 67a:	e0 e3       	ldi	r30, 0x30	; 48
 67c:	f0 e0       	ldi	r31, 0x00	; 0
 67e:	80 81       	ld	r24, Z
 680:	28 2f       	mov	r18, r24
 682:	30 e0       	ldi	r19, 0x00	; 0
 684:	8c 81       	ldd	r24, Y+4	; 0x04
 686:	88 2f       	mov	r24, r24
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	a9 01       	movw	r20, r18
 68c:	02 c0       	rjmp	.+4      	; 0x692 <DIO_u8GetPinValue+0x144>
 68e:	55 95       	asr	r21
 690:	47 95       	ror	r20
 692:	8a 95       	dec	r24
 694:	e2 f7       	brpl	.-8      	; 0x68e <DIO_u8GetPinValue+0x140>
 696:	ca 01       	movw	r24, r20
 698:	81 70       	andi	r24, 0x01	; 1
 69a:	89 83       	std	Y+1, r24	; 0x01
        if (Local_u8PinValue == 0)
 69c:	89 81       	ldd	r24, Y+1	; 0x01
 69e:	88 23       	and	r24, r24
 6a0:	21 f4       	brne	.+8      	; 0x6aa <DIO_u8GetPinValue+0x15c>
        {
            *Copy_pu8PinValue = DIO_u8_LOW;
 6a2:	ed 81       	ldd	r30, Y+5	; 0x05
 6a4:	fe 81       	ldd	r31, Y+6	; 0x06
 6a6:	10 82       	st	Z, r1
 6a8:	06 c0       	rjmp	.+12     	; 0x6b6 <DIO_u8GetPinValue+0x168>
        }
        else{
            *Copy_pu8PinValue = DIO_u8_HIGH;
 6aa:	ed 81       	ldd	r30, Y+5	; 0x05
 6ac:	fe 81       	ldd	r31, Y+6	; 0x06
 6ae:	81 e0       	ldi	r24, 0x01	; 1
 6b0:	80 83       	st	Z, r24
 6b2:	01 c0       	rjmp	.+2      	; 0x6b6 <DIO_u8GetPinValue+0x168>
       
       }
    }
    else
    {
        Local_u8ErrorState = STD_TYPES_NOK;
 6b4:	1a 82       	std	Y+2, r1	; 0x02
    }
    return Local_u8ErrorState;
 6b6:	8a 81       	ldd	r24, Y+2	; 0x02
} 
 6b8:	28 96       	adiw	r28, 0x08	; 8
 6ba:	0f b6       	in	r0, 0x3f	; 63
 6bc:	f8 94       	cli
 6be:	de bf       	out	0x3e, r29	; 62
 6c0:	0f be       	out	0x3f, r0	; 63
 6c2:	cd bf       	out	0x3d, r28	; 61
 6c4:	cf 91       	pop	r28
 6c6:	df 91       	pop	r29
 6c8:	08 95       	ret

000006ca <DIO_u8SetPortDirection>:
u8 DIO_u8SetPortDirection  (u8 Copy_u8PortID, u8 Copy_u8PortDirection)
{
 6ca:	df 93       	push	r29
 6cc:	cf 93       	push	r28
 6ce:	cd b7       	in	r28, 0x3d	; 61
 6d0:	de b7       	in	r29, 0x3e	; 62
 6d2:	2d 97       	sbiw	r28, 0x0d	; 13
 6d4:	0f b6       	in	r0, 0x3f	; 63
 6d6:	f8 94       	cli
 6d8:	de bf       	out	0x3e, r29	; 62
 6da:	0f be       	out	0x3f, r0	; 63
 6dc:	cd bf       	out	0x3d, r28	; 61
 6de:	8a 83       	std	Y+2, r24	; 0x02
 6e0:	6b 83       	std	Y+3, r22	; 0x03
    u8 Local_u8ErrorState = STD_TYPES_OK;
 6e2:	81 e0       	ldi	r24, 0x01	; 1
 6e4:	89 83       	std	Y+1, r24	; 0x01
    if ((Copy_u8PortDirection == DIO_u8_OUTPUT) || (Copy_u8PortDirection == DIO_u8_INPUT))
 6e6:	8b 81       	ldd	r24, Y+3	; 0x03
 6e8:	81 30       	cpi	r24, 0x01	; 1
 6ea:	21 f0       	breq	.+8      	; 0x6f4 <DIO_u8SetPortDirection+0x2a>
 6ec:	8b 81       	ldd	r24, Y+3	; 0x03
 6ee:	88 23       	and	r24, r24
 6f0:	09 f0       	breq	.+2      	; 0x6f4 <DIO_u8SetPortDirection+0x2a>
 6f2:	7f c0       	rjmp	.+254    	; 0x7f2 <DIO_u8SetPortDirection+0x128>
    {
        switch (Copy_u8PortID)
 6f4:	8a 81       	ldd	r24, Y+2	; 0x02
 6f6:	28 2f       	mov	r18, r24
 6f8:	30 e0       	ldi	r19, 0x00	; 0
 6fa:	3d 87       	std	Y+13, r19	; 0x0d
 6fc:	2c 87       	std	Y+12, r18	; 0x0c
 6fe:	8c 85       	ldd	r24, Y+12	; 0x0c
 700:	9d 85       	ldd	r25, Y+13	; 0x0d
 702:	81 30       	cpi	r24, 0x01	; 1
 704:	91 05       	cpc	r25, r1
 706:	71 f1       	breq	.+92     	; 0x764 <DIO_u8SetPortDirection+0x9a>
 708:	2c 85       	ldd	r18, Y+12	; 0x0c
 70a:	3d 85       	ldd	r19, Y+13	; 0x0d
 70c:	22 30       	cpi	r18, 0x02	; 2
 70e:	31 05       	cpc	r19, r1
 710:	2c f4       	brge	.+10     	; 0x71c <DIO_u8SetPortDirection+0x52>
 712:	8c 85       	ldd	r24, Y+12	; 0x0c
 714:	9d 85       	ldd	r25, Y+13	; 0x0d
 716:	00 97       	sbiw	r24, 0x00	; 0
 718:	69 f0       	breq	.+26     	; 0x734 <DIO_u8SetPortDirection+0x6a>
 71a:	69 c0       	rjmp	.+210    	; 0x7ee <DIO_u8SetPortDirection+0x124>
 71c:	2c 85       	ldd	r18, Y+12	; 0x0c
 71e:	3d 85       	ldd	r19, Y+13	; 0x0d
 720:	22 30       	cpi	r18, 0x02	; 2
 722:	31 05       	cpc	r19, r1
 724:	b1 f1       	breq	.+108    	; 0x792 <DIO_u8SetPortDirection+0xc8>
 726:	8c 85       	ldd	r24, Y+12	; 0x0c
 728:	9d 85       	ldd	r25, Y+13	; 0x0d
 72a:	83 30       	cpi	r24, 0x03	; 3
 72c:	91 05       	cpc	r25, r1
 72e:	09 f4       	brne	.+2      	; 0x732 <DIO_u8SetPortDirection+0x68>
 730:	47 c0       	rjmp	.+142    	; 0x7c0 <DIO_u8SetPortDirection+0xf6>
 732:	5d c0       	rjmp	.+186    	; 0x7ee <DIO_u8SetPortDirection+0x124>
        {
        case DIO_u8_PORTA:
            switch (Copy_u8PortDirection)
 734:	8b 81       	ldd	r24, Y+3	; 0x03
 736:	28 2f       	mov	r18, r24
 738:	30 e0       	ldi	r19, 0x00	; 0
 73a:	3b 87       	std	Y+11, r19	; 0x0b
 73c:	2a 87       	std	Y+10, r18	; 0x0a
 73e:	8a 85       	ldd	r24, Y+10	; 0x0a
 740:	9b 85       	ldd	r25, Y+11	; 0x0b
 742:	00 97       	sbiw	r24, 0x00	; 0
 744:	59 f0       	breq	.+22     	; 0x75c <DIO_u8SetPortDirection+0x92>
 746:	2a 85       	ldd	r18, Y+10	; 0x0a
 748:	3b 85       	ldd	r19, Y+11	; 0x0b
 74a:	21 30       	cpi	r18, 0x01	; 1
 74c:	31 05       	cpc	r19, r1
 74e:	09 f0       	breq	.+2      	; 0x752 <DIO_u8SetPortDirection+0x88>
 750:	51 c0       	rjmp	.+162    	; 0x7f4 <DIO_u8SetPortDirection+0x12a>
            {
            case DIO_u8_OUTPUT:
                DIO_u8_DDRA_REG = 0xff;
 752:	ea e3       	ldi	r30, 0x3A	; 58
 754:	f0 e0       	ldi	r31, 0x00	; 0
 756:	8f ef       	ldi	r24, 0xFF	; 255
 758:	80 83       	st	Z, r24
 75a:	4c c0       	rjmp	.+152    	; 0x7f4 <DIO_u8SetPortDirection+0x12a>
                break;
                case DIO_u8_INPUT:
                DIO_u8_DDRA_REG = 0x00;
 75c:	ea e3       	ldi	r30, 0x3A	; 58
 75e:	f0 e0       	ldi	r31, 0x00	; 0
 760:	10 82       	st	Z, r1
 762:	48 c0       	rjmp	.+144    	; 0x7f4 <DIO_u8SetPortDirection+0x12a>
                break;
            }
            break;
              case DIO_u8_PORTB:
            switch (Copy_u8PortDirection)
 764:	8b 81       	ldd	r24, Y+3	; 0x03
 766:	28 2f       	mov	r18, r24
 768:	30 e0       	ldi	r19, 0x00	; 0
 76a:	39 87       	std	Y+9, r19	; 0x09
 76c:	28 87       	std	Y+8, r18	; 0x08
 76e:	88 85       	ldd	r24, Y+8	; 0x08
 770:	99 85       	ldd	r25, Y+9	; 0x09
 772:	00 97       	sbiw	r24, 0x00	; 0
 774:	51 f0       	breq	.+20     	; 0x78a <DIO_u8SetPortDirection+0xc0>
 776:	28 85       	ldd	r18, Y+8	; 0x08
 778:	39 85       	ldd	r19, Y+9	; 0x09
 77a:	21 30       	cpi	r18, 0x01	; 1
 77c:	31 05       	cpc	r19, r1
 77e:	d1 f5       	brne	.+116    	; 0x7f4 <DIO_u8SetPortDirection+0x12a>
            {
            case DIO_u8_OUTPUT:
                DIO_u8_DDRB_REG = 0xff;
 780:	e7 e3       	ldi	r30, 0x37	; 55
 782:	f0 e0       	ldi	r31, 0x00	; 0
 784:	8f ef       	ldi	r24, 0xFF	; 255
 786:	80 83       	st	Z, r24
 788:	35 c0       	rjmp	.+106    	; 0x7f4 <DIO_u8SetPortDirection+0x12a>
                break;
                case DIO_u8_INPUT:
                DIO_u8_DDRB_REG = 0x00;
 78a:	e7 e3       	ldi	r30, 0x37	; 55
 78c:	f0 e0       	ldi	r31, 0x00	; 0
 78e:	10 82       	st	Z, r1
 790:	31 c0       	rjmp	.+98     	; 0x7f4 <DIO_u8SetPortDirection+0x12a>
                break;
            }
            break;
              case DIO_u8_PORTC:
            switch (Copy_u8PortDirection)
 792:	8b 81       	ldd	r24, Y+3	; 0x03
 794:	28 2f       	mov	r18, r24
 796:	30 e0       	ldi	r19, 0x00	; 0
 798:	3f 83       	std	Y+7, r19	; 0x07
 79a:	2e 83       	std	Y+6, r18	; 0x06
 79c:	8e 81       	ldd	r24, Y+6	; 0x06
 79e:	9f 81       	ldd	r25, Y+7	; 0x07
 7a0:	00 97       	sbiw	r24, 0x00	; 0
 7a2:	51 f0       	breq	.+20     	; 0x7b8 <DIO_u8SetPortDirection+0xee>
 7a4:	2e 81       	ldd	r18, Y+6	; 0x06
 7a6:	3f 81       	ldd	r19, Y+7	; 0x07
 7a8:	21 30       	cpi	r18, 0x01	; 1
 7aa:	31 05       	cpc	r19, r1
 7ac:	19 f5       	brne	.+70     	; 0x7f4 <DIO_u8SetPortDirection+0x12a>
            {
            case DIO_u8_OUTPUT:
                DIO_u8_DDRC_REG = 0xff;
 7ae:	e4 e3       	ldi	r30, 0x34	; 52
 7b0:	f0 e0       	ldi	r31, 0x00	; 0
 7b2:	8f ef       	ldi	r24, 0xFF	; 255
 7b4:	80 83       	st	Z, r24
 7b6:	1e c0       	rjmp	.+60     	; 0x7f4 <DIO_u8SetPortDirection+0x12a>
                break;
                case DIO_u8_INPUT:
                DIO_u8_DDRC_REG = 0x00;
 7b8:	e4 e3       	ldi	r30, 0x34	; 52
 7ba:	f0 e0       	ldi	r31, 0x00	; 0
 7bc:	10 82       	st	Z, r1
 7be:	1a c0       	rjmp	.+52     	; 0x7f4 <DIO_u8SetPortDirection+0x12a>
                break;
            }
            break;
              case DIO_u8_PORTD:
            switch (Copy_u8PortDirection)
 7c0:	8b 81       	ldd	r24, Y+3	; 0x03
 7c2:	28 2f       	mov	r18, r24
 7c4:	30 e0       	ldi	r19, 0x00	; 0
 7c6:	3d 83       	std	Y+5, r19	; 0x05
 7c8:	2c 83       	std	Y+4, r18	; 0x04
 7ca:	8c 81       	ldd	r24, Y+4	; 0x04
 7cc:	9d 81       	ldd	r25, Y+5	; 0x05
 7ce:	00 97       	sbiw	r24, 0x00	; 0
 7d0:	51 f0       	breq	.+20     	; 0x7e6 <DIO_u8SetPortDirection+0x11c>
 7d2:	2c 81       	ldd	r18, Y+4	; 0x04
 7d4:	3d 81       	ldd	r19, Y+5	; 0x05
 7d6:	21 30       	cpi	r18, 0x01	; 1
 7d8:	31 05       	cpc	r19, r1
 7da:	61 f4       	brne	.+24     	; 0x7f4 <DIO_u8SetPortDirection+0x12a>
            {
            case DIO_u8_OUTPUT:
                DIO_u8_DDRD_REG = 0xff;
 7dc:	e1 e3       	ldi	r30, 0x31	; 49
 7de:	f0 e0       	ldi	r31, 0x00	; 0
 7e0:	8f ef       	ldi	r24, 0xFF	; 255
 7e2:	80 83       	st	Z, r24
 7e4:	07 c0       	rjmp	.+14     	; 0x7f4 <DIO_u8SetPortDirection+0x12a>
                break;
                case DIO_u8_INPUT:
                DIO_u8_DDRD_REG = 0x00;
 7e6:	e1 e3       	ldi	r30, 0x31	; 49
 7e8:	f0 e0       	ldi	r31, 0x00	; 0
 7ea:	10 82       	st	Z, r1
 7ec:	03 c0       	rjmp	.+6      	; 0x7f4 <DIO_u8SetPortDirection+0x12a>
                break;
            }
            break;
            default: Local_u8ErrorState =STD_TYPES_NOK;
 7ee:	19 82       	std	Y+1, r1	; 0x01
 7f0:	01 c0       	rjmp	.+2      	; 0x7f4 <DIO_u8SetPortDirection+0x12a>
      
        }
    }
    else
    {
        Local_u8ErrorState = STD_TYPES_NOK;
 7f2:	19 82       	std	Y+1, r1	; 0x01
    }
    
    return Local_u8ErrorState;
 7f4:	89 81       	ldd	r24, Y+1	; 0x01
}
 7f6:	2d 96       	adiw	r28, 0x0d	; 13
 7f8:	0f b6       	in	r0, 0x3f	; 63
 7fa:	f8 94       	cli
 7fc:	de bf       	out	0x3e, r29	; 62
 7fe:	0f be       	out	0x3f, r0	; 63
 800:	cd bf       	out	0x3d, r28	; 61
 802:	cf 91       	pop	r28
 804:	df 91       	pop	r29
 806:	08 95       	ret

00000808 <DIO_u8SetPortValue>:
u8 DIO_u8SetPortValue      (u8 Copy_u8PortID, u8 Copy_u8PortValue)
{
 808:	df 93       	push	r29
 80a:	cf 93       	push	r28
 80c:	00 d0       	rcall	.+0      	; 0x80e <DIO_u8SetPortValue+0x6>
 80e:	00 d0       	rcall	.+0      	; 0x810 <DIO_u8SetPortValue+0x8>
 810:	0f 92       	push	r0
 812:	cd b7       	in	r28, 0x3d	; 61
 814:	de b7       	in	r29, 0x3e	; 62
 816:	8a 83       	std	Y+2, r24	; 0x02
 818:	6b 83       	std	Y+3, r22	; 0x03
    u8 Local_u8ErrorState = STD_TYPES_OK;
 81a:	81 e0       	ldi	r24, 0x01	; 1
 81c:	89 83       	std	Y+1, r24	; 0x01
    switch (Copy_u8PortID)
 81e:	8a 81       	ldd	r24, Y+2	; 0x02
 820:	28 2f       	mov	r18, r24
 822:	30 e0       	ldi	r19, 0x00	; 0
 824:	3d 83       	std	Y+5, r19	; 0x05
 826:	2c 83       	std	Y+4, r18	; 0x04
 828:	8c 81       	ldd	r24, Y+4	; 0x04
 82a:	9d 81       	ldd	r25, Y+5	; 0x05
 82c:	81 30       	cpi	r24, 0x01	; 1
 82e:	91 05       	cpc	r25, r1
 830:	d1 f0       	breq	.+52     	; 0x866 <__stack+0x7>
 832:	2c 81       	ldd	r18, Y+4	; 0x04
 834:	3d 81       	ldd	r19, Y+5	; 0x05
 836:	22 30       	cpi	r18, 0x02	; 2
 838:	31 05       	cpc	r19, r1
 83a:	2c f4       	brge	.+10     	; 0x846 <DIO_u8SetPortValue+0x3e>
 83c:	8c 81       	ldd	r24, Y+4	; 0x04
 83e:	9d 81       	ldd	r25, Y+5	; 0x05
 840:	00 97       	sbiw	r24, 0x00	; 0
 842:	61 f0       	breq	.+24     	; 0x85c <DIO_u8SetPortValue+0x54>
 844:	1f c0       	rjmp	.+62     	; 0x884 <__stack+0x25>
 846:	2c 81       	ldd	r18, Y+4	; 0x04
 848:	3d 81       	ldd	r19, Y+5	; 0x05
 84a:	22 30       	cpi	r18, 0x02	; 2
 84c:	31 05       	cpc	r19, r1
 84e:	81 f0       	breq	.+32     	; 0x870 <__stack+0x11>
 850:	8c 81       	ldd	r24, Y+4	; 0x04
 852:	9d 81       	ldd	r25, Y+5	; 0x05
 854:	83 30       	cpi	r24, 0x03	; 3
 856:	91 05       	cpc	r25, r1
 858:	81 f0       	breq	.+32     	; 0x87a <__stack+0x1b>
 85a:	14 c0       	rjmp	.+40     	; 0x884 <__stack+0x25>
    {
    case DIO_u8_PORTA:
        DIO_u8_PORTA_REG =Copy_u8PortValue;
 85c:	eb e3       	ldi	r30, 0x3B	; 59
 85e:	f0 e0       	ldi	r31, 0x00	; 0
 860:	8b 81       	ldd	r24, Y+3	; 0x03
 862:	80 83       	st	Z, r24
 864:	10 c0       	rjmp	.+32     	; 0x886 <__stack+0x27>
        break;
        case DIO_u8_PORTB:
        DIO_u8_PORTB_REG =Copy_u8PortValue;
 866:	e8 e3       	ldi	r30, 0x38	; 56
 868:	f0 e0       	ldi	r31, 0x00	; 0
 86a:	8b 81       	ldd	r24, Y+3	; 0x03
 86c:	80 83       	st	Z, r24
 86e:	0b c0       	rjmp	.+22     	; 0x886 <__stack+0x27>
        break;
        case DIO_u8_PORTC:
        DIO_u8_PORTC_REG =Copy_u8PortValue;
 870:	e5 e3       	ldi	r30, 0x35	; 53
 872:	f0 e0       	ldi	r31, 0x00	; 0
 874:	8b 81       	ldd	r24, Y+3	; 0x03
 876:	80 83       	st	Z, r24
 878:	06 c0       	rjmp	.+12     	; 0x886 <__stack+0x27>
        break;
        case DIO_u8_PORTD:
        DIO_u8_PORTD_REG =Copy_u8PortValue;
 87a:	e2 e3       	ldi	r30, 0x32	; 50
 87c:	f0 e0       	ldi	r31, 0x00	; 0
 87e:	8b 81       	ldd	r24, Y+3	; 0x03
 880:	80 83       	st	Z, r24
 882:	01 c0       	rjmp	.+2      	; 0x886 <__stack+0x27>
        break;
    
    default: Local_u8ErrorState =STD_TYPES_NOK;
 884:	19 82       	std	Y+1, r1	; 0x01
        break;
    }
    return Local_u8ErrorState;
 886:	89 81       	ldd	r24, Y+1	; 0x01
}
 888:	0f 90       	pop	r0
 88a:	0f 90       	pop	r0
 88c:	0f 90       	pop	r0
 88e:	0f 90       	pop	r0
 890:	0f 90       	pop	r0
 892:	cf 91       	pop	r28
 894:	df 91       	pop	r29
 896:	08 95       	ret

00000898 <DIO_u8GetPortValue>:
u8 DIO_u8GetPortValue      (u8 Copy_u8PortId, u8 *Copy_pu8ReturnedPortValue)
{
 898:	df 93       	push	r29
 89a:	cf 93       	push	r28
 89c:	00 d0       	rcall	.+0      	; 0x89e <DIO_u8GetPortValue+0x6>
 89e:	00 d0       	rcall	.+0      	; 0x8a0 <DIO_u8GetPortValue+0x8>
 8a0:	00 d0       	rcall	.+0      	; 0x8a2 <DIO_u8GetPortValue+0xa>
 8a2:	cd b7       	in	r28, 0x3d	; 61
 8a4:	de b7       	in	r29, 0x3e	; 62
 8a6:	8a 83       	std	Y+2, r24	; 0x02
 8a8:	7c 83       	std	Y+4, r23	; 0x04
 8aa:	6b 83       	std	Y+3, r22	; 0x03
    u8 Local_u8ErrorState = STD_TYPES_OK;
 8ac:	81 e0       	ldi	r24, 0x01	; 1
 8ae:	89 83       	std	Y+1, r24	; 0x01
    if (Copy_pu8ReturnedPortValue != NULL)
 8b0:	8b 81       	ldd	r24, Y+3	; 0x03
 8b2:	9c 81       	ldd	r25, Y+4	; 0x04
 8b4:	00 97       	sbiw	r24, 0x00	; 0
 8b6:	e9 f1       	breq	.+122    	; 0x932 <DIO_u8GetPortValue+0x9a>
    {
        switch (Copy_u8PortId)
 8b8:	8a 81       	ldd	r24, Y+2	; 0x02
 8ba:	28 2f       	mov	r18, r24
 8bc:	30 e0       	ldi	r19, 0x00	; 0
 8be:	3e 83       	std	Y+6, r19	; 0x06
 8c0:	2d 83       	std	Y+5, r18	; 0x05
 8c2:	8d 81       	ldd	r24, Y+5	; 0x05
 8c4:	9e 81       	ldd	r25, Y+6	; 0x06
 8c6:	81 30       	cpi	r24, 0x01	; 1
 8c8:	91 05       	cpc	r25, r1
 8ca:	e1 f0       	breq	.+56     	; 0x904 <DIO_u8GetPortValue+0x6c>
 8cc:	2d 81       	ldd	r18, Y+5	; 0x05
 8ce:	3e 81       	ldd	r19, Y+6	; 0x06
 8d0:	22 30       	cpi	r18, 0x02	; 2
 8d2:	31 05       	cpc	r19, r1
 8d4:	2c f4       	brge	.+10     	; 0x8e0 <DIO_u8GetPortValue+0x48>
 8d6:	8d 81       	ldd	r24, Y+5	; 0x05
 8d8:	9e 81       	ldd	r25, Y+6	; 0x06
 8da:	00 97       	sbiw	r24, 0x00	; 0
 8dc:	61 f0       	breq	.+24     	; 0x8f6 <DIO_u8GetPortValue+0x5e>
 8de:	27 c0       	rjmp	.+78     	; 0x92e <DIO_u8GetPortValue+0x96>
 8e0:	2d 81       	ldd	r18, Y+5	; 0x05
 8e2:	3e 81       	ldd	r19, Y+6	; 0x06
 8e4:	22 30       	cpi	r18, 0x02	; 2
 8e6:	31 05       	cpc	r19, r1
 8e8:	a1 f0       	breq	.+40     	; 0x912 <DIO_u8GetPortValue+0x7a>
 8ea:	8d 81       	ldd	r24, Y+5	; 0x05
 8ec:	9e 81       	ldd	r25, Y+6	; 0x06
 8ee:	83 30       	cpi	r24, 0x03	; 3
 8f0:	91 05       	cpc	r25, r1
 8f2:	b1 f0       	breq	.+44     	; 0x920 <DIO_u8GetPortValue+0x88>
 8f4:	1c c0       	rjmp	.+56     	; 0x92e <DIO_u8GetPortValue+0x96>
        {
        case DIO_u8_PORTA:
           *Copy_pu8ReturnedPortValue =DIO_u8_PINA_REG;
 8f6:	e9 e3       	ldi	r30, 0x39	; 57
 8f8:	f0 e0       	ldi	r31, 0x00	; 0
 8fa:	80 81       	ld	r24, Z
 8fc:	eb 81       	ldd	r30, Y+3	; 0x03
 8fe:	fc 81       	ldd	r31, Y+4	; 0x04
 900:	80 83       	st	Z, r24
 902:	18 c0       	rjmp	.+48     	; 0x934 <DIO_u8GetPortValue+0x9c>
            break;
            case DIO_u8_PORTB:
           *Copy_pu8ReturnedPortValue =DIO_u8_PINB_REG;
 904:	e6 e3       	ldi	r30, 0x36	; 54
 906:	f0 e0       	ldi	r31, 0x00	; 0
 908:	80 81       	ld	r24, Z
 90a:	eb 81       	ldd	r30, Y+3	; 0x03
 90c:	fc 81       	ldd	r31, Y+4	; 0x04
 90e:	80 83       	st	Z, r24
 910:	11 c0       	rjmp	.+34     	; 0x934 <DIO_u8GetPortValue+0x9c>
            break;
            case DIO_u8_PORTC:
           *Copy_pu8ReturnedPortValue =DIO_u8_PINC_REG;
 912:	e3 e3       	ldi	r30, 0x33	; 51
 914:	f0 e0       	ldi	r31, 0x00	; 0
 916:	80 81       	ld	r24, Z
 918:	eb 81       	ldd	r30, Y+3	; 0x03
 91a:	fc 81       	ldd	r31, Y+4	; 0x04
 91c:	80 83       	st	Z, r24
 91e:	0a c0       	rjmp	.+20     	; 0x934 <DIO_u8GetPortValue+0x9c>
            break;
            case DIO_u8_PORTD:
           *Copy_pu8ReturnedPortValue =DIO_u8_PIND_REG;
 920:	e0 e3       	ldi	r30, 0x30	; 48
 922:	f0 e0       	ldi	r31, 0x00	; 0
 924:	80 81       	ld	r24, Z
 926:	eb 81       	ldd	r30, Y+3	; 0x03
 928:	fc 81       	ldd	r31, Y+4	; 0x04
 92a:	80 83       	st	Z, r24
 92c:	03 c0       	rjmp	.+6      	; 0x934 <DIO_u8GetPortValue+0x9c>
            break;
        
        default: Local_u8ErrorState =STD_TYPES_NOK;
 92e:	19 82       	std	Y+1, r1	; 0x01
 930:	01 c0       	rjmp	.+2      	; 0x934 <DIO_u8GetPortValue+0x9c>
            break;
        }
    }
    else
    {
        Local_u8ErrorState = STD_TYPES_NOK;
 932:	19 82       	std	Y+1, r1	; 0x01
    }
    
    return Local_u8ErrorState;
 934:	89 81       	ldd	r24, Y+1	; 0x01
}
 936:	26 96       	adiw	r28, 0x06	; 6
 938:	0f b6       	in	r0, 0x3f	; 63
 93a:	f8 94       	cli
 93c:	de bf       	out	0x3e, r29	; 62
 93e:	0f be       	out	0x3f, r0	; 63
 940:	cd bf       	out	0x3d, r28	; 61
 942:	cf 91       	pop	r28
 944:	df 91       	pop	r29
 946:	08 95       	ret

00000948 <delay>:
#include "../MCAL/DIO/DIO_interface.h"

void delay(void)
	{
 948:	df 93       	push	r29
 94a:	cf 93       	push	r28
 94c:	00 d0       	rcall	.+0      	; 0x94e <delay+0x6>
 94e:	00 d0       	rcall	.+0      	; 0x950 <delay+0x8>
 950:	cd b7       	in	r28, 0x3d	; 61
 952:	de b7       	in	r29, 0x3e	; 62
		for(int x=0;x<500;x++)
 954:	1c 82       	std	Y+4, r1	; 0x04
 956:	1b 82       	std	Y+3, r1	; 0x03
 958:	14 c0       	rjmp	.+40     	; 0x982 <delay+0x3a>
			for(int y=0;y<500;y++)
 95a:	1a 82       	std	Y+2, r1	; 0x02
 95c:	19 82       	std	Y+1, r1	; 0x01
 95e:	06 c0       	rjmp	.+12     	; 0x96c <delay+0x24>
				__asm("NOP");
 960:	00 00       	nop
#include "../MCAL/DIO/DIO_interface.h"

void delay(void)
	{
		for(int x=0;x<500;x++)
			for(int y=0;y<500;y++)
 962:	89 81       	ldd	r24, Y+1	; 0x01
 964:	9a 81       	ldd	r25, Y+2	; 0x02
 966:	01 96       	adiw	r24, 0x01	; 1
 968:	9a 83       	std	Y+2, r25	; 0x02
 96a:	89 83       	std	Y+1, r24	; 0x01
 96c:	89 81       	ldd	r24, Y+1	; 0x01
 96e:	9a 81       	ldd	r25, Y+2	; 0x02
 970:	21 e0       	ldi	r18, 0x01	; 1
 972:	84 3f       	cpi	r24, 0xF4	; 244
 974:	92 07       	cpc	r25, r18
 976:	a4 f3       	brlt	.-24     	; 0x960 <delay+0x18>
#include "../MCAL/DIO/DIO_interface.h"

void delay(void)
	{
		for(int x=0;x<500;x++)
 978:	8b 81       	ldd	r24, Y+3	; 0x03
 97a:	9c 81       	ldd	r25, Y+4	; 0x04
 97c:	01 96       	adiw	r24, 0x01	; 1
 97e:	9c 83       	std	Y+4, r25	; 0x04
 980:	8b 83       	std	Y+3, r24	; 0x03
 982:	8b 81       	ldd	r24, Y+3	; 0x03
 984:	9c 81       	ldd	r25, Y+4	; 0x04
 986:	21 e0       	ldi	r18, 0x01	; 1
 988:	84 3f       	cpi	r24, 0xF4	; 244
 98a:	92 07       	cpc	r25, r18
 98c:	34 f3       	brlt	.-52     	; 0x95a <delay+0x12>
			for(int y=0;y<500;y++)
				__asm("NOP");
	}
 98e:	0f 90       	pop	r0
 990:	0f 90       	pop	r0
 992:	0f 90       	pop	r0
 994:	0f 90       	pop	r0
 996:	cf 91       	pop	r28
 998:	df 91       	pop	r29
 99a:	08 95       	ret

0000099c <main>:
int main()

{
 99c:	df 93       	push	r29
 99e:	cf 93       	push	r28
 9a0:	cd b7       	in	r28, 0x3d	; 61
 9a2:	de b7       	in	r29, 0x3e	; 62

	DIO_voidInit();
 9a4:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_voidInit>
			while(1)
			{

				DIO_voidSetPinValue(DIO_u8_PORTA,DIO_u8_PIN0,DIO_u8_HIGH);
 9a8:	80 e0       	ldi	r24, 0x00	; 0
 9aa:	60 e0       	ldi	r22, 0x00	; 0
 9ac:	41 e0       	ldi	r20, 0x01	; 1
 9ae:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinValue>
				delay();
 9b2:	0e 94 a4 04 	call	0x948	; 0x948 <delay>
				DIO_voidSetPinValue(DIO_u8_PORTB,DIO_u8_PIN1,DIO_u8_LOW);
 9b6:	81 e0       	ldi	r24, 0x01	; 1
 9b8:	61 e0       	ldi	r22, 0x01	; 1
 9ba:	40 e0       	ldi	r20, 0x00	; 0
 9bc:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinValue>

				delay();
 9c0:	0e 94 a4 04 	call	0x948	; 0x948 <delay>
 9c4:	f1 cf       	rjmp	.-30     	; 0x9a8 <main+0xc>

000009c6 <_exit>:
 9c6:	f8 94       	cli

000009c8 <__stop_program>:
 9c8:	ff cf       	rjmp	.-2      	; 0x9c8 <__stop_program>
